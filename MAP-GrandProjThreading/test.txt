ExeStack:
[(int v;(a=true;(IF(a) THEN(v=2)ELSE(v=3);print v))), bool a]
SymTable:
{}
Out:
[]
ExeStack:
[(int v;(a=true;(IF(a) THEN(v=2)ELSE(v=3);print v)))]
SymTable:
{a=false}
Out:
[]
ExeStack:
[(a=true;(IF(a) THEN(v=2)ELSE(v=3);print v)), int v]
SymTable:
{a=false}
Out:
[]
ExeStack:
[(a=true;(IF(a) THEN(v=2)ELSE(v=3);print v))]
SymTable:
{a=false, v=0}
Out:
[]
ExeStack:
[(IF(a) THEN(v=2)ELSE(v=3);print v), a=true]
SymTable:
{a=false, v=0}
Out:
[]
ExeStack:
[(IF(a) THEN(v=2)ELSE(v=3);print v)]
SymTable:
{a=true, v=0}
Out:
[]
ExeStack:
[print v, IF(a) THEN(v=2)ELSE(v=3)]
SymTable:
{a=true, v=0}
Out:
[]
ExeStack:
[print v, v=2]
SymTable:
{a=true, v=0}
Out:
[]
ExeStack:
[print v]
SymTable:
{a=true, v=2}
Out:
[]
ExeStack:
[]
SymTable:
{a=true, v=2}
Out:
[2]
ExeStack:
[(varf=leTest.txt;(opening varf;(int varc;(reading varc varf;(print varc;(reading varc varf;(print varc;close varf))))))), string varf]
SymTable:
{}
Out:
[]
FileTable:
{}ExeStack:
[(varf=leTest.txt;(opening varf;(int varc;(reading varc varf;(print varc;(reading varc varf;(print varc;close varf)))))))]
SymTable:
{varf=}
Out:
[]
FileTable:
{}ExeStack:
[(opening varf;(int varc;(reading varc varf;(print varc;(reading varc varf;(print varc;close varf)))))), varf=leTest.txt]
SymTable:
{varf=}
Out:
[]
FileTable:
{}ExeStack:
[(opening varf;(int varc;(reading varc varf;(print varc;(reading varc varf;(print varc;close varf))))))]
SymTable:
{varf=leTest.txt}
Out:
[]
FileTable:
{}ExeStack:
[(int varc;(reading varc varf;(print varc;(reading varc varf;(print varc;close varf))))), opening varf]
SymTable:
{varf=leTest.txt}
Out:
[]
FileTable:
{}ExeStack:
[(int varc;(reading varc varf;(print varc;(reading varc varf;(print varc;close varf)))))]
SymTable:
{varf=leTest.txt}
Out:
[]
FileTable:
{leTest.txt=java.io.BufferedReader@482f8f11}ExeStack:
[(reading varc varf;(print varc;(reading varc varf;(print varc;close varf)))), int varc]
SymTable:
{varf=leTest.txt}
Out:
[]
FileTable:
{leTest.txt=java.io.BufferedReader@482f8f11}ExeStack:
[(reading varc varf;(print varc;(reading varc varf;(print varc;close varf))))]
SymTable:
{varf=leTest.txt, varc=0}
Out:
[]
FileTable:
{leTest.txt=java.io.BufferedReader@482f8f11}ExeStack:
[(print varc;(reading varc varf;(print varc;close varf))), reading varc varf]
SymTable:
{varf=leTest.txt, varc=0}
Out:
[]
FileTable:
{leTest.txt=java.io.BufferedReader@482f8f11}ExeStack:
[(print varc;(reading varc varf;(print varc;close varf)))]
SymTable:
{varf=leTest.txt, varc=15}
Out:
[]
FileTable:
{leTest.txt=java.io.BufferedReader@482f8f11}ExeStack:
[(reading varc varf;(print varc;close varf)), print varc]
SymTable:
{varf=leTest.txt, varc=15}
Out:
[]
FileTable:
{leTest.txt=java.io.BufferedReader@482f8f11}ExeStack:
[(reading varc varf;(print varc;close varf))]
SymTable:
{varf=leTest.txt, varc=15}
Out:
[15]
FileTable:
{leTest.txt=java.io.BufferedReader@482f8f11}ExeStack:
[(print varc;close varf), reading varc varf]
SymTable:
{varf=leTest.txt, varc=15}
Out:
[15]
FileTable:
{leTest.txt=java.io.BufferedReader@482f8f11}ExeStack:
[(print varc;close varf)]
SymTable:
{varf=leTest.txt, varc=50}
Out:
[15]
FileTable:
{leTest.txt=java.io.BufferedReader@482f8f11}ExeStack:
[close varf, print varc]
SymTable:
{varf=leTest.txt, varc=50}
Out:
[15]
FileTable:
{leTest.txt=java.io.BufferedReader@482f8f11}ExeStack:
[close varf]
SymTable:
{varf=leTest.txt, varc=50}
Out:
[15, 50]
FileTable:
{leTest.txt=java.io.BufferedReader@482f8f11}ExeStack:
[]
SymTable:
{varf=leTest.txt, varc=50}
Out:
[15, 50]
FileTable:
{}ExeStack:
[(v=2;print v), int v]
SymTable:
{}
Out:
[]
FileTable:
{}ExeStack:
[(v=2;print v)]
SymTable:
{v=0}
Out:
[]
FileTable:
{}ExeStack:
[print v, v=2]
SymTable:
{v=0}
Out:
[]
FileTable:
{}ExeStack:
[print v]
SymTable:
{v=2}
Out:
[]
FileTable:
{}ExeStack:
[]
SymTable:
{v=2}
Out:
[2]
FileTable:
{}ExeStack:
[(int b;(a=2/3/5;(b=a/1;print b))), int a]
SymTable:
{}
Out:
[]
FileTable:
{}ExeStack:
[(int b;(a=2/3/5;(b=a/1;print b)))]
SymTable:
{a=0}
Out:
[]
FileTable:
{}ExeStack:
[(a=2/3/5;(b=a/1;print b)), int b]
SymTable:
{a=0}
Out:
[]
FileTable:
{}ExeStack:
[(a=2/3/5;(b=a/1;print b))]
SymTable:
{a=0, b=0}
Out:
[]
FileTable:
{}ExeStack:
[(b=a/1;print b), a=2/3/5]
SymTable:
{a=0, b=0}
Out:
[]
FileTable:
{}ExeStack:
[(b=a/1;print b)]
SymTable:
{a=17, b=0}
Out:
[]
FileTable:
{}ExeStack:
[print b, b=a/1]
SymTable:
{a=17, b=0}
Out:
[]
FileTable:
{}ExeStack:
[print b]
SymTable:
{a=17, b=18}
Out:
[]
FileTable:
{}ExeStack:
[]
SymTable:
{a=17, b=18}
Out:
[18]
FileTable:
{}ExeStack:
[(v=2;print v), int v]
SymTable:
{}
Out:
[]
FileTable:
{}ExeStack:
[(v=2;print v)]
SymTable:
{v=0}
Out:
[]
FileTable:
{}ExeStack:
[print v, v=2]
SymTable:
{v=0}
Out:
[]
FileTable:
{}ExeStack:
[print v]
SymTable:
{v=2}
Out:
[]
FileTable:
{}ExeStack:
[]
SymTable:
{v=2}
Out:
[2]
FileTable:
{}ExeStack:
[(int v;(a=true;(IF(a) THEN(v=2)ELSE(v=3);print v))), bool a]
SymTable:
{}
Out:
[]
FileTable:
{}ExeStack:
[(int v;(a=true;(IF(a) THEN(v=2)ELSE(v=3);print v)))]
SymTable:
{a=false}
Out:
[]
FileTable:
{}ExeStack:
[(a=true;(IF(a) THEN(v=2)ELSE(v=3);print v)), int v]
SymTable:
{a=false}
Out:
[]
FileTable:
{}ExeStack:
[(a=true;(IF(a) THEN(v=2)ELSE(v=3);print v))]
SymTable:
{a=false, v=0}
Out:
[]
FileTable:
{}ExeStack:
[(IF(a) THEN(v=2)ELSE(v=3);print v), a=true]
SymTable:
{a=false, v=0}
Out:
[]
FileTable:
{}ExeStack:
[(IF(a) THEN(v=2)ELSE(v=3);print v)]
SymTable:
{a=true, v=0}
Out:
[]
FileTable:
{}ExeStack:
[print v, IF(a) THEN(v=2)ELSE(v=3)]
SymTable:
{a=true, v=0}
Out:
[]
FileTable:
{}ExeStack:
[print v, v=2]
SymTable:
{a=true, v=0}
Out:
[]
FileTable:
{}ExeStack:
[print v]
SymTable:
{a=true, v=2}
Out:
[]
FileTable:
{}ExeStack:
[]
SymTable:
{a=true, v=2}
Out:
[2]
FileTable:
{}